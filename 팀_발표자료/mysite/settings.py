"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-n$%a1=cz0=_e!zx=$0c3&)y)4knsz$m3j9by0*c^q+(7zbc@3m"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#aws ec2 퍼블릭 ip도 추가
ALLOWED_HOSTS = ['localhost','127.0.0.1','15.165.59.78']


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "main",
    "account",
    "chart",
    "predict_info",
    "community",
    "mypage",
    'django.contrib.humanize',
    'django_apscheduler',
    'chatbot',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "mysite.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR,'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "mysite.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": BASE_DIR / "db.sqlite3",
#     }
# }
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "mysql_db",
        "USER": "user",
        "PASSWORD": "user",
        "HOST": "localhost",
        "PORT": "3306",
        "OPTIONS": {
            "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",
            "charset": "utf8mb4",
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

# LANGUAGE_CODE = "en-us"
LANGUAGE_CODE = "ko-kr"

# TIME_ZONE = "UTC"
TIME_ZONE = "Asia/Seoul"

USE_I18N = True

# USE_TZ = True
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "/static/"
STATICFILES_DIRS=[BASE_DIR / 'static']
#add1
# Media 설정
MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_URL = '/media/'
#add2
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

#add1
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        '': {
            'handlers': ['file', 'console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}
DART_API_KEY = "20bd2b3be4074e083f9e4fcca962ca791ee23883"
SESSION_COOKIE_AGE = 3600  # 1시간(3600초) 후 세션 만료
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # 브라우저 닫을 시 세션 만료
AUTH_USER_MODEL = 'account.User'
FILE_UPLOAD_MAX_MEMORY_SIZE = 26214400  # 25MB
#add2
# 네이버
NAVER_NEWS_API_CLIENT_ID = "OCRZok3QLNl9VF2e0Uo_" # 제공해주신 ID
NAVER_NEWS_API_CLIENT_SECRET = "djBL9xrZIM"    # 제공해주신 Secret
# Django APScheduler 설정 (선택 사항, 기본값 사용 가능)
APSCHEDULER_DATETIME_FORMAT = "N j, Y, f:s a"  # Django Admin에 표시될 날짜/시간 형식
APSCHEDULER_RUN_NOW_TIMEOUT = 25  # 작업 즉시 실행 시 타임아웃 (초)
LOGIN_URL = '/account/login/'

# jobs.py에서 사용할 스케줄러 설정 (선택 사항)
SCHEDULER_CONFIG = {
    "apscheduler.jobstores.default": {
        "type": "django" # DjangoJobStore 사용
    },
    'apscheduler.executors.default': {
        'class': 'apscheduler.executors.pool:ThreadPoolExecutor',
        'max_workers': '1' # 동시에 실행할 최대 작업 수
    },
    'apscheduler.timezone': TIME_ZONE, # Django 설정의 TIME_ZONE 사용
}


KOSDAQ_TRAINING_DATA_DIR = os.path.join(BASE_DIR, 'predict_info', 'kosdaq_data')
KOSPI_TRAINING_DATA_DIR = os.path.join(BASE_DIR, 'predict_info', 'kospi_data')

# 모델 및 스케일러 저장 폴더 (views.py와 공유 가능, 여기서는 startup_tasks.py 내에서 BASE_DIR 기준으로 직접 구성)
ML_MODELS_DIR = os.path.join(BASE_DIR, 'predict_info', 'ml_models')